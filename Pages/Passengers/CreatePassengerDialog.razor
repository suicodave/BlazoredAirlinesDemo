@inject ILogger<CreatePassengerDialog> Logger
@inject PassengerHttpClient Http

<EditForm Model="@Model" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <MudDialog>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@Model.Name" Label="Name" Variant="Variant.Outlined"></MudTextField>
                </MudItem>

                <MudItem xs="6">
                    <MudTextField @bind-Value="@Model.Trips" Label="Trips" Variant="Variant.Outlined"></MudTextField>
                </MudItem>

                <MudItem xs="6">
                    <MudTextField @bind-Value="@Model.Airline" Label="Airline Id" Variant="Variant.Outlined">
                    </MudTextField>
                </MudItem>
            </MudGrid>

        </DialogContent>

        <DialogActions>
            <div class="my-4 mr-4">
                <MudButton Color="Color.Primary" OnClick="Submit">Save</MudButton>
                <MudButton OnClick="Cancel">Cancel</MudButton>
            </div>
        </DialogActions>

    </MudDialog>
</EditForm>



@code {
    [CascadingParameter]
    public MudDialogInstance Dialog { get; set; }

    private CreatePassengerRequest Model = new();

    void Cancel() => Dialog.Cancel();

    async Task<int> Submit()
    {
        var result = await Http.Create(Model);

        Dialog.Close(DialogResult.Ok(result));

        return 1;
    }
}